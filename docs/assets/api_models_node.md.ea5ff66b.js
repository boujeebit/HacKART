import{_ as s,c as a,o as n,a as e}from"./app.f2bbaf41.js";const A=JSON.parse('{"title":"Nodes","description":"","frontmatter":{},"headers":[{"level":2,"title":"Model Structure","slug":"model-structure","link":"#model-structure","children":[]},{"level":2,"title":"Queries","slug":"queries","link":"#queries","children":[{"level":3,"title":"Nodes","slug":"nodes-1","link":"#nodes-1","children":[]},{"level":3,"title":"Node","slug":"node","link":"#node","children":[]}]},{"level":2,"title":"Mutations","slug":"mutations","link":"#mutations","children":[]}],"relativePath":"api/models/node.md"}'),l={name:"api/models/node.md"},o=e(`<h1 id="nodes" tabindex="-1">Nodes <a class="header-anchor" href="#nodes" aria-hidden="true">#</a></h1><p>Nodes are the ESP8266</p><h2 id="model-structure" tabindex="-1">Model Structure <a class="header-anchor" href="#model-structure" aria-hidden="true">#</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)</span></span>
<span class="line"><span style="color:#A6ACCD;">    machineid = models.CharField(max_length=128, unique=True, null=True, blank=True)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">    heartbeats  = models.BooleanField(null=True, blank=True)</span></span>
<span class="line"><span style="color:#A6ACCD;">    initialized = models.DateTimeField(null=True, blank=True)</span></span>
<span class="line"><span style="color:#A6ACCD;">    heartbeat = models.DateTimeField(null=True, blank=True)</span></span>
<span class="line"><span style="color:#A6ACCD;">    internval = models.IntegerField(null=True, blank=True)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">    team = models.ForeignKey(Team, null=True, blank=True, on_delete=models.SET_NULL, related_name=&quot;node&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="queries" tabindex="-1">Queries <a class="header-anchor" href="#queries" aria-hidden="true">#</a></h2><h3 id="nodes-1" tabindex="-1">Nodes <a class="header-anchor" href="#nodes-1" aria-hidden="true">#</a></h3><p>To query all nodes</p><div class="language-graphql"><button title="Copy Code" class="copy"></button><span class="lang">graphql</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">query</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  nodes </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	id</span></span>
<span class="line"><span style="color:#A6ACCD;">    networking </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">...</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="node" tabindex="-1">Node <a class="header-anchor" href="#node" aria-hidden="true">#</a></h3><p>To query a single node</p><div class="language-graphql"><button title="Copy Code" class="copy"></button><span class="lang">graphql</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">query</span><span style="color:#A6ACCD;">(</span><span style="color:#A6ACCD;font-style:italic;">$id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  node(</span><span style="color:#A6ACCD;font-style:italic;">id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">$id) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	id</span></span>
<span class="line"><span style="color:#A6ACCD;">    networking </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">...</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h4 id="variables" tabindex="-1">Variables: <a class="header-anchor" href="#variables" aria-hidden="true">#</a></h4><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">&lt;insert-your-id&gt;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="mutations" tabindex="-1">Mutations <a class="header-anchor" href="#mutations" aria-hidden="true">#</a></h2><p>The Node mutation endpoint is loaded to handle <code>create</code>, <code>update</code>, and <code>delete</code> operations. The ~type~ argument is required for the mutation to run. This endpoint is only capable of creating and updating the friendly name and team. All other fields on the Node model can only to updated by a heartbeat.</p><div class="language-graphql"><button title="Copy Code" class="copy"></button><span class="lang">graphql</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">mutation</span><span style="color:#A6ACCD;">(</span><span style="color:#A6ACCD;font-style:italic;">$type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">!,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">$id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">$name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">String</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">$team</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">String</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	node(</span><span style="color:#A6ACCD;font-style:italic;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> $type</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> $id</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> $name</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">team</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> $team) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    message</span></span>
<span class="line"><span style="color:#A6ACCD;">    node </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      id</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h4 id="variables-1" tabindex="-1">Variables: <a class="header-anchor" href="#variables-1" aria-hidden="true">#</a></h4><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">{</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">&lt;[&#39;create&#39;, &#39;update&#39;, &#39;delete&#39;]&gt;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div>`,18),p=[o];function t(r,c,i,d,D,y){return n(),a("div",null,p)}const F=s(l,[["render",t]]);export{A as __pageData,F as default};
